# Production Docker Compose with additional services

services:
  # Main application
  textextract-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: textextract-pro
    ports:
      - "8081:8080"
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_REDIS_URL=redis://textextract-redis:6379
    volumes:
      - ./logs:/var/log/nginx
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - textextract-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Load balancer (for scaling)
  nginx-lb:
    image: nginx:alpine
    container_name: textextract-lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-lb.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - textextract-app
    restart: unless-stopped
    networks:
      - textextract-network

  # Monitoring with Watchtower
  watchtower:
    image: containrrr/watchtower
    container_name: textextract-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    restart: unless-stopped
    networks:
      - textextract-network

networks:
  textextract-network:
    driver: bridge

volumes:
  ssl_certs:
    driver: local